<?xml version="1.0" ?>

<robot name="hamster_bot" xmlns:xacro="https://www.ros.org/wiki/xacro" >

  <xacro:include filename="$(find spherical_bot)/urdf/macros.xacro" />
  <xacro:include filename="$(find spherical_bot)/urdf/properties.xacro" />
  
  <gazebo reference="link_chassis">
    <material>Gazebo/Orange</material>
    <!-- <material>rim</material> -->
    <gravity>1</gravity>
  </gazebo>
  <!-- this one is not changing -->
  <gazebo reference = "link_left_wheel"> 
    <material>Gazebo/White</material>
    <gravity>1</gravity>
  </gazebo>
  <gazebo reference="link_right_wheel">
    <material>Gazebo/White</material>
    <gravity>1</gravity>
  </gazebo>
    
  <link name="link_chassis">
    <!-- pose and inertial -->
    <pose>0 0 0.1 0 0 0</pose>
    
    <inertial>
      <mass value="${robot_mass}"/>
      <origin rpy="0  0  0" xyz="0 0.01 0"/>
      <!-- <inertia ixx="0.00022083" ixy="0" ixz="0" iyy="0.00022083" iyz="0" izz="0.00040833"/> -->
      <box_inertia mass="${robot_mass}" x="0.04" y="0.01" z="0.01" />
    </inertial>
    
    <collision name="link_chassis_collision">
      <origin rpy="0  0  0" xyz="0     0    -0.00"/>
      <geometry>
        <box size="0.04 0.01 0.01"/>
      </geometry>
    </collision>
    
    <visual name="link_chassis_visual">
      <origin rpy="0  0  0" xyz="0     0    -0.00"/>
      <geometry>
        <box size="0.04 0.01 0.01"/>
      </geometry>
    </visual>
</link>
  <!-- <link name="header">
    <pose>0 0 0.1 0 0 0</pose>
    <collision name="header_collision">
      <origin rpy="0  0  0" xyz="0     0    -0.00"/>
      <geometry>
        <box size="0.01 0.02 0.000001"/>
      </geometry>
    </collision>
      <visual name="header_visual">
        <origin rpy="0  0  0" xyz="0     0    -0.00"/>
        <geometry>
        <box size="0.01 0.02 0.0000001"/>
      </geometry>
      </visual>
    </link>
    <joint name="header_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <child link="header" />
    <parent link="link_chassis"/>
    <axis rpy="0 0 0" xyz="1 0 0"/>
    </joint> -->
  
  <!-- Create wheel right -->  

  <link_wheel name="link_right_wheel" r="${wheel_radius}" l="${wheel_thickness}" m="${wheel_mass}" />

  <link_wheel name="link_left_wheel" r="${wheel_radius}" l="${wheel_thickness}" m="${wheel_mass}" />
    
  <!--   Joint for right wheel  -->
  <joint name="joint_right_wheel" type="continuous">
    <origin rpy="0 0 0" xyz="${sphere_radius/2.0} 0.0 0.0"/>
    <child link="link_right_wheel" />
    <parent link="link_chassis"/>
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <limit effort="10" velocity="10"/>
    <joint_properties damping="1.0" friction="1.0" />
  </joint>  
  <transmission name="right_wheel_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="right_wheel_motor">
       <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="joint_right_wheel">
       <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
     </joint>
  </transmission>
    
  <!--   Joint for right wheel  -->
  <joint name="joint_left_wheel" type="continuous">
    <origin rpy="0 0 0" xyz="${-1*sphere_radius/2.0} 0.0 0.0"/>
    <child link="link_left_wheel" />
    <parent link="link_chassis"/>
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <limit effort="10" velocity="10"/>
    <joint_properties damping="1.0" friction="1.0" />
  </joint> 
  <transmission name="left_wheel_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="left_wheel_motor">
       <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="joint_left_wheel">
       <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
     </joint>
  </transmission>


  <!-- <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <legacyMode>false</legacyMode>
      <updateRate>20</updateRate>
      <leftJoint>joint_left_wheel</leftJoint>
      <rightJoint>joint_right_wheel</rightJoint>
      <wheelSeparation>"{$sphere_radius}"</wheelSeparation>
      <wheelDiameter>0.12</wheelDiameter>
      <wheelAcceleration>4</wheelAcceleration>
      <torque>0.0</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>link_chassis</robotBaseFrame>
    </plugin>
  </gazebo> -->

  <gazebo reference="link_chassis">
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

   <gazebo> 
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/hamster_bot</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  
</robot>
